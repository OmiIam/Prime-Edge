Hereâ€™s a purpose-built Replit prompt you can feed directly into Replit AI or use to auto-generate a full-stack internet banking web app, modeled after Chase Bankâ€™s clean corporate design, with admin privileges for user control and fund management.

â¸»

ðŸ§  Replit AI Prompt: Full Internet Banking Website (Chase Style, Admin Fund Control)

ðŸš€ Project Goal: Build a production-grade internet banking website using Express.js, SQLite, and TailwindCSS â€” deployed and runnable on Replit.

ðŸŽ¯ Functionality Requirements:
	1.	User Authentication:

	â€¢	Register / Login using email + password
	â€¢	Passwords hashed using bcryptjs
	â€¢	JWT session-based auth
	â€¢	Role-based access (user, admin)

	2.	User Dashboard:

	â€¢	Shows current balance
	â€¢	Recent transactions
	â€¢	Account information (name, email, account type)

	3.	Admin Dashboard:

	â€¢	View all users
	â€¢	Add or subtract funds from any user account
	â€¢	Create/edit/delete users
	â€¢	Log all actions in an admin_logs table

	4.	Design Style:

	â€¢	Mimic Chase Bankâ€™s clean, corporate UI
	â€¢	Use TailwindCSS with a navy-blue primary palette, minimalist card-based layout
	â€¢	Professional fonts (e.g., Inter or IBM Plex Sans), light spacing, dark text, modern UI components

	5.	Database (SQLite):

	â€¢	Tables:

users(id, name, email, password, role, balance, created_at)
transactions(id, user_id, type, amount, created_at)
admin_logs(id, admin_id, action, target_user_id, amount, created_at)



	6.	Routes:

	â€¢	POST /api/auth/register
	â€¢	POST /api/auth/login
	â€¢	GET /api/dashboard (user)
	â€¢	GET /api/admin/users
	â€¢	POST /api/admin/users/:id/fund
	â€¢	DELETE /api/admin/users/:id

	7.	Frontend:

	â€¢	Use nextjs
	â€¢	Pages: Login, Register, User Dashboard, Admin Dashboard
	â€¢	Mobile-first responsive

	8.	Security:

	â€¢	Middleware to verify JWT and user roles
	â€¢	Sanitize all input
	â€¢	Prevent overfunding or negative balances

ðŸ“¦ Tech Stack:
	â€¢	Express.js
	â€¢	SQLite3
	â€¢	bcryptjs
	â€¢	jsonwebtoken
	â€¢	TailwindCSS
	â€¢	Replit deployment (via index.js or server.js)

âœ… Final Deliverables:
	â€¢	A fully functional Chase-style internet banking site
	â€¢	User + admin role control
	â€¢	All code runnable and editable directly on Replit
	â€¢	Minimal, readable, well-commented code structure

â¸»
